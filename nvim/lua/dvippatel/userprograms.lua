--local lspconfig = require('lspconfig')
--
---- TypeScript LSP setup
--lspconfig.ts_ls.setup({
--    -- Default cmd and filetypes are good, but we'll be explicit
--    cmd = { "typescript-language-server", "--stdio" },
--    filetypes = {
--        "javascript",
--        "javascriptreact",
--        "javascript.jsx",
--        "typescript",
--        "typescriptreact",
--        "typescript.tsx"
--    },
--    root_dir = lspconfig.util.root_pattern(
--        "tsconfig.json",
--        "package.json",
--        "jsconfig.json",
--        ".git"
--    ),
--    -- Additional configuration options
--    settings = {
--        typescript = {
--            inlayHints = {
--                includeInlayParameterNameHints = 'all',
--                includeInlayParameterNameHintsWhenArgumentMatchesName = false,
--                includeInlayFunctionParameterTypeHints = true,
--                includeInlayVariableTypeHints = true,
--                includeInlayPropertyDeclarationTypeHints = true,
--                includeInlayFunctionLikeReturnTypeHints = true,
--                includeInlayEnumMemberValueHints = true,
--            }
--        },
--        javascript = {
--            inlayHints = {
--                includeInlayParameterNameHints = 'all',
--                includeInlayParameterNameHintsWhenArgumentMatchesName = false,
--                includeInlayFunctionParameterTypeHints = true,
--                includeInlayVariableTypeHints = true,
--                includeInlayPropertyDeclarationTypeHints = true,
--                includeInlayFunctionLikeReturnTypeHints = true,
--                includeInlayEnumMemberValueHints = true,
--            }
--        }
--    },
--    -- Add keybindings and other capabilities
--    on_attach = function(client, bufnr)
--        -- Enable completion triggered by <c-x><c-o>
--        vim.api.nvim_buf_set_option(bufnr, 'omnifunc', 'v:lua.vim.lsp.omnifunc')
--
--        -- Mappings
--        local bufopts = { noremap=true, silent=true, buffer=bufnr }
--        vim.keymap.set('n', 'gD', vim.lsp.buf.declaration, bufopts)
--        vim.keymap.set('n', 'gd', vim.lsp.buf.definition, bufopts)
--        vim.keymap.set('n', 'K', vim.lsp.buf.hover, bufopts)
--        vim.keymap.set('n', 'gi', vim.lsp.buf.implementation, bufopts)
--        vim.keymap.set('n', '<C-k>', vim.lsp.buf.signature_help, bufopts)
--        vim.keymap.set('n', '<space>D', vim.lsp.buf.type_definition, bufopts)
--        vim.keymap.set('n', '<space>rn', vim.lsp.buf.rename, bufopts)
--        vim.keymap.set('n', '<space>ca', vim.lsp.buf.code_action, bufopts)
--        vim.keymap.set('n', 'gr', vim.lsp.buf.references, bufopts)
--    end,
--})
--
---- none-ls setup for additional formatters and linters
---- Additional settings for better experience
--vim.opt.updatetime = 300
--vim.opt.signcolumn = "yes"
--
---- Optional: Add autoformat on save
--vim.cmd [[
--    augroup FormatAutogroup
--    autocmd!
--    autocmd BufWritePre *.ts,*.tsx,*.js,*.jsx lua vim.lsp.buf.format()
--    augroup END
--]] 
